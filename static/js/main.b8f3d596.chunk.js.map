{"version":3,"sources":["reportWebVitals.ts","components/error-boundary/ErrorBoundary.tsx","assets/Logo.svg","components/basket/summary/BasketSummary.tsx","components/header/Header.tsx","components/card/Card.tsx","components/sorting/Sorting.tsx","components/filter/Filter.tsx","store/reducers/ProductReducer.tsx","store/reducers/BasketReducer.tsx","pages/home/content-area/ProductList.tsx","pages/home/basket-area/BasketList.tsx","App.tsx","store/store.tsx","store/reducers/CompanyReducer.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundary","props","state","error","errorInfo","this","setState","style","whiteSpace","toString","componentStack","children","Component","React","BasketSummary","selector","useSelector","className","basket","total","Header","src","logo","alt","Card","classes","push","label","join","Sorting","forwardRef","forwardedRef","inputRef","useRef","items","cases","useState","setSortItem","id","Math","random","substr","sort","item","data","a","b","type","direction","reverse","useEffect","useImperativeHandle","uncheck","current","name","document","getElementsByName","forEach","checked","map","key","onClick","ref","htmlFor","Filter","timeout","placeholder","path","debounce","filtered","setFiltered","selected","setSelected","init","setInit","isSelected","find","s","onChange","value","window","clearTimeout","setTimeout","length","found","filter","toLowerCase","includes","foundItem","list","pushSelected","initialState","products","tags","tagList","product","tag","getTags","companies","types","filterAll","reduce","company","manufacturer","slug","itemType","filter_product_by_company_slug","payload","initialBasketState","ProductList","dispatch","useDispatch","filterByItemType","splice","indexOf","isTypeSelected","bind","price","addToBasket","BasketList","count","App","setTitle","mutableRefObject","setProducts","sorting","filterByCompanies","filterByTags","combine","combineReducers","action","pay","calculatePrice","Number","toFixed","console","log","store","createStore","title","prevTitle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b8f3d596.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React, { Component, ErrorInfo } from 'react';\n\ninterface Props {\n}\n\ninterface State {\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null,\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo):void {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error,\n      errorInfo,\n    })\n    // You can also log error messages to an error reporting service here\n  }\n\n  render(): JSX.Element {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{whiteSpace: 'pre-wrap'}}>\n            {this.state.error && this.state.error.toString()}\n            <br/>\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return <>{this.props.children}</>;\n  }\n\n}\n\nexport class BuggyCounter extends React.Component {\n\n  state: Readonly<{ counter: number }>;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {counter: 0};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(): void {\n    this.setState(({counter}: Readonly<{ counter: number }>) => ({\n      counter: counter + 1,\n    }));\n  }\n\n  render(): JSX.Element {\n    if (this.state.counter === 5) {\n      // Simulate a JS error\n      throw new Error('I crashed!');\n    }\n    return <h1 onClick={this.handleClick}>{this.state.counter}</h1>;\n  }\n\n}\n","export default __webpack_public_path__ + \"static/media/Logo.7c2ff2cf.svg\";","import { useSelector } from 'react-redux';\n\nimport './basket-summary.scss';\nimport { CombineType } from 'src/store/store';\n\nexport const BasketSummary = (): JSX.Element => {\n  const selector = useSelector((state: CombineType) => state);\n  return (\n    <div className=\"basket-summary\">\n      <span className=\"icon\"/>\n      <span className=\"price\">₺{selector.basket.total}</span>\n    </div>\n  )\n}\n","import React from 'react';\n\nimport './header.scss';\nimport logo from 'src/assets/Logo.svg';\nimport { BasketSummary } from 'src/components/basket/summary/BasketSummary';\n\nexport const Header = (): JSX.Element => {\n  return (\n    <header>\n      <div className=\"container header\">\n        <h1><img src={logo} alt=\"Market\"/></h1>\n        <BasketSummary/>\n      </div>\n    </header>\n  )\n}\n","import React from 'react';\n\nimport './card.scss';\n\ninterface Props {\n  label: string;\n  className?: string;\n}\n\nexport const Card = (props: React.PropsWithChildren<Props>): JSX.Element => {\n  const classes = ['content'];\n  if (props.className) {\n    classes.push(props.className);\n  }\n  return (\n    <div className=\"card\">\n      <div className=\"label\">{props.label}</div>\n      <div className={classes.join(' ')}>{props.children}</div>\n    </div>\n  )\n}\n","import React, { ForwardedRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\n\nimport './sorting.scss';\n\ninterface SortingProps {\n  cases: SortingItem[];\n  data?: any;\n  onClick?: (item: any[]) => void;\n  ref: ForwardedRef<ImperativeHandle>;\n}\n\nexport interface SortingItem {\n  label: string,\n  type: string,\n  direction: 'asc' | 'desc'\n}\n\nexport interface ImperativeHandle {\n  uncheck: () => void,\n}\n\n// export const Sorting = (props: SortingProps): JSX.Element => {\nexport const Sorting = React.forwardRef<ImperativeHandle, SortingProps>(\n  (props, forwardedRef) => {\n    const inputRef = useRef<HTMLInputElement | null>(null);\n    const items: SortingItem[] = props.cases;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [sortItem, setSortItem] = useState(items[0]);\n\n    const idGenerator = () => {\n      return '_' + Math.random().toString(36).substr(2, 9);\n    };\n\n    const id = idGenerator();\n\n    const onClick = (item: SortingItem) => {\n      setSortItem(item);\n      props.onClick && props.onClick(sort(item))\n    }\n\n    const sort = (item: SortingItem) => {\n      props.data.sort((a: { [x: string]: number; }, b: { [x: string]: number; }) => {\n        return a[item.type] - b[item.type];\n      })\n      if (item.direction === 'desc') {\n        props.data.reverse();\n      }\n      return props.data;\n    }\n\n    useEffect(() => {\n      // console.log('sort efffecct');\n    }, [props.data]);\n\n    // The component instance will be extended\n    // with whatever you return from the callback passed\n    // as the second argument\n    useImperativeHandle(forwardedRef, () => ({\n      uncheck() {\n        if (inputRef.current?.name) {\n          document.getElementsByName(inputRef.current?.name).forEach((item) => (item as HTMLInputElement).checked = false);\n        }\n      },\n    }));\n\n    return (\n      <ul className=\"sorting-list\">{\n        items.map((item, key) =>\n          <li key={key}>\n            <input id={`${key}-${id}`} type=\"radio\" name={id} onClick={() => onClick(item)} ref={inputRef}/>\n            <label htmlFor={`${key}-${id}`}>{item.label}</label>\n          </li>,\n        )}\n      </ul>\n    )\n  },\n)\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport './filter.scss';\n\ninterface FilterProps {\n  placeholder: string;\n  path?: string;\n  data?: any[] | null;\n  debounce?: number;\n  onClick?: (items: any[]) => void;\n}\n\nexport const Filter = (props: FilterProps): JSX.Element => {\n  let timeout: number;\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const {data, placeholder, path, debounce} = props;\n  const [filtered, setFiltered] = useState(data || []);\n  const [selected, setSelected] = useState<any[]>([]);\n  const [init, setInit] = useState<boolean>(false);\n\n  const idGenerator =  () => {\n    return '_' + Math.random().toString(36).substr(2, 9);\n  };\n\n  const filter = () => {\n    const value = inputRef.current?.value;\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(() => {\n      if (typeof (value) === 'string' && value?.length >= 0) {\n        const found = data?.filter((item) => (path ? item[path] : item).toLowerCase().includes(value.toLowerCase())) || [];\n        setFiltered(found);\n      }\n    }, debounce || 800);\n  }\n\n  const pushSelected = (item: any) => {\n    const foundItem = selected.find((s) => s === item);\n    let list = [...selected];\n    (foundItem) ?\n      list = list.filter((s) => s !== foundItem) :\n      list.push(item as never);\n    setSelected(list);\n    setInit(true);\n  }\n\n  const isSelected = (item: any): boolean => {\n    return !!selected.find(s => item === s);\n  }\n\n  useEffect(() => {\n    if (init) {\n      props.onClick && props.onClick(selected);\n    }\n  }, [selected])\n\n  const id = idGenerator();\n  return (\n    <>\n      <input ref={inputRef} onChange={filter} className=\"filter\" placeholder={placeholder}/>\n      <ul className=\"filter-list\">\n        {\n          filtered?.map((item, key) =>\n            <li key={key}>\n              <input id={`${key}-${id}`} type=\"checkbox\" onChange={() => pushSelected(item)} checked={isSelected(item)}/>\n              <label htmlFor={`${key}-${id}`}>{path ? item[path] : item}</label>\n            </li>,\n          )\n        }\n      </ul>\n    </>\n  )\n}\n","import { AnyAction, Reducer } from 'redux';\n\nimport products from '../products.json';\nimport { Company } from 'src/store/reducers/CompanyReducer';\n\nexport interface Product {\n  'tags': string[];\n  'price': number;\n  'name': string;\n  'description': string;\n  'slug': string;\n  'added': number;\n  'manufacturer': string;\n  'itemType': string;\n}\n\nexport interface ProductState {\n  products: Product[],\n  filtered: Product[],\n  tags: string[],\n  filter: {\n    companies: Company[],\n    types: string[],\n    tags: string[],\n  }\n}\n\nconst getTags = (): string[] => {\n  const tagList: string[] = [];\n  const addTagExist = (tags: string[]) => {\n    tags.forEach((tag) => {\n      if (!tagList.includes(tag)) {\n        tagList.push(tag);\n      }\n    })\n  }\n  products.forEach((product: Product) => addTagExist(product.tags));\n  return tagList;\n}\n\nconst initialState: ProductState = {\n  products,\n  filtered: products,\n  tags: getTags(),\n  filter: {\n    companies: [],\n    types: [],\n    tags: [],\n  },\n};\n\nconst filterAll = (state: ProductState): Product[] => {\n  let filtered = state.products;\n  // Find Companies\n  if (state.filter.companies.length > 0) {\n    filtered = state.filter.companies.reduce((total: Product[], company: Company) => {\n      return [...total, ...filtered.filter((item: Product) => item.manufacturer === company.slug)];\n    }, []);\n  }\n  // Find Items\n  if (state.filter.types.length > 0) {\n    filtered = state.filter.types.reduce((total: Product[], type: string) => {\n      return [...total, ...filtered.filter((item: Product) => item.itemType === type)];\n    }, []);\n  }\n  // Find Tags\n  if (state.filter.tags.length > 0) {\n    filtered = state.filter.tags.reduce((total: Product[], type: string) => {\n      return [...total, ...filtered.filter((item: Product) => item.tags.includes(type))];\n    }, []);\n  }\n  return filtered;\n}\n\nexport const ProductReducer: Reducer = (state: ProductState = initialState, action: AnyAction) => {\n  switch (action.type) {\n  case 'FILTER_PRODUCT_BY_COMPANY_SLUG': {\n    state.filter.companies = action.payload;\n    const filtered = filterAll(state);\n    return {...state, filtered}\n  }\n  case 'FILTER_PRODUCT_BY_ITEM_TYPE': {\n    state.filter.types = action.payload;\n    const filtered = filterAll(state);\n    return {...state, filtered}\n  }\n  case 'FILTER_PRODUCT_BY_TAGS': {\n    state.filter.tags = action.payload;\n    const filtered = filterAll(state);\n    return {...state, filtered}\n  }\n  default :\n    return state;\n  }\n}\n\nexport const filter_product_by_company_slug = (payload: Company[]): { type: string, payload: Company[] } => {\n  return {\n    type: 'FILTER_PRODUCT_BY_COMPANY_SLUG',\n    payload,\n  }\n}\n\nexport const filter_product_by_item_type = (payload: string[]): { type: string, payload: string[] } => {\n  return {\n    type: 'FILTER_PRODUCT_BY_ITEM_TYPE',\n    payload,\n  }\n}\n\nexport const filter_product_by_tags = (payload: string[]): { type: string, payload: string[] } => {\n  return {\n    type: 'FILTER_PRODUCT_BY_TAGS',\n    payload,\n  }\n}\n\n","import { AnyAction, Reducer } from 'redux';\n\nimport { Product } from 'src/store/reducers/ProductReducer';\n\nexport interface Basket {\n  product: Product,\n  count: number\n}\n\nexport interface BasketState {\n  list: Basket[],\n  total: number;\n}\n\nconst initialBasketState = {\n  list: [],\n  total: 0,\n}\n\nexport const BasketReducer: Reducer = (state: BasketState = initialBasketState, action) => {\n  const found: Basket | undefined = state.list.find(item => action.payload === item.product);\n  const calculatePrice = () => {\n    const total: number = state.list.reduce((total: number, item) => {\n      return total + (item.product.price * item.count);\n    }, 0)\n    state.total = Number(total.toFixed(2));\n  }\n  switch (action.type) {\n  case 'ADD_TO_BASKET': {\n    (found) ? found.count = found.count + 1 : state.list.push({product: action.payload, count: 1});\n    calculatePrice();\n    return {...state};\n  }\n  case 'INCREMENT_BASKET_ITEM': {\n    if (found) {\n      found.count = found.count + 1;\n      calculatePrice();\n      console.log('incfremen', state);\n    }\n    return {...state};\n  }\n  case 'DECREMENT_BASKET_ITEM': {\n    if (found) {\n      if (found.count > 1) {\n        found.count = found.count - 1;\n      } else {\n        state.list = state.list.filter((s) => s !== found);\n      }\n      calculatePrice();\n    }\n\n    return {...state};\n  }\n  default:\n    return state;\n  }\n}\n\nexport const add_to_basket = (payload: Product): AnyAction => {\n  return {\n    type: 'ADD_TO_BASKET',\n    payload,\n  }\n}\n\nexport const increment_basket_item = (payload: Product): AnyAction => {\n  return {\n    type: 'INCREMENT_BASKET_ITEM',\n    payload,\n  }\n}\n\nexport const decrement_basket_item = (payload: Product): AnyAction => {\n  return {\n    type: 'DECREMENT_BASKET_ITEM',\n    payload,\n  }\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport './product-list.scss';\nimport { filter_product_by_item_type, Product } from 'src/store/reducers/ProductReducer';\nimport { add_to_basket } from 'src/store/reducers/BasketReducer';\n\ninterface Props {\n  list: Product[];\n}\n\nexport const ProductList = (props: Props): JSX.Element => {\n  const itemTypes = ['mug', 'shirt', 'fruit'];\n  const [selected, setSelected] = useState<string[]>([]);\n  const dispatch = useDispatch();\n\n  const addToBasket = (item: Product) => {\n    dispatch(add_to_basket(item));\n  }\n\n  const filterByItemType = (type: string) => {\n    const found = selected.find(item => item === type);\n    (!found) ? selected.push(type) : selected.includes(type) && selected.splice(selected.indexOf(type), 1);\n    setSelected([...selected]);\n    dispatch(filter_product_by_item_type(selected));\n  }\n\n  const isTypeSelected = (type: string) => {\n    return !!selected.find(item => item === type);\n  }\n\n  return (\n    <div className=\"product-list\">\n      <h1>Products</h1>\n      <div className=\"product-filter-area\">\n        <div className=\"item-types\">\n          {\n            itemTypes.map((type, key) =>\n              <button\n                className={isTypeSelected(type) ? 'selected tag' : 'tag'}\n                key={key}\n                onClick={filterByItemType.bind(this, type)}\n              >\n                {type}\n              </button>,\n            )\n          }\n        </div>\n        <div className=\"found-count\"><b>{props.list.length}</b> record(s) found</div>\n      </div>\n      {\n        props.list.length > 0 &&\n        <div className=\"product-area grid\">\n          {\n            props.list.map((item, key) =>\n              <div className=\"product-item\" key={key}>\n                <div className=\"product-image\"/>\n                <div className=\"product-price\">₺ {item.price}</div>\n                <div className={'product-name'}>{item.name}</div>\n                <button className=\"product-add\" onClick={() => addToBasket(item)}>Add</button>\n              </div>,\n            )\n          },\n        </div>\n      }\n      {props.list.length == 0 && <div className=\"product-area\">No data were found</div>}\n    </div>\n  )\n}\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport './basket-list.scss';\nimport { CombineType } from 'src/store/store';\nimport { Card } from 'src/components/card/Card';\nimport { Basket, decrement_basket_item, increment_basket_item } from 'src/store/reducers/BasketReducer';\n\nexport const BasketList = (): JSX.Element => {\n  const selector = useSelector((state: CombineType) => state);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Card label={'Basket'} className={'card-bordered'}>\n        {\n          selector.basket.list.length > 0 ? selector.basket.list.map((item: Basket, key: number) =>\n            <div className=\"basket-item\" key={key}>\n              <div className=\"product-info\">\n                <div className=\"product-name\">{item.product.name}</div>\n                <div className=\"product-price\">₺{item.product.price}</div>\n              </div>\n              <div className=\"product-counter\">\n                <button onClick={() => dispatch(decrement_basket_item(item.product))} className=\"ghost counter-button\">-</button>\n                <div className=\"product-count-button\">{item.count}</div>\n                <button onClick={() => dispatch(increment_basket_item(item.product))} className=\"ghost counter-button\">+</button>\n              </div>\n            </div>,\n          ) : <div>Please, <b>Add</b> items.</div>\n        }\n        {(selector.basket.list.length) ? <div className=\"basket-total\">₺{selector.basket.total}</div> : null}\n      </Card>\n    </>\n  )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './App.scss';\nimport { ErrorBoundary } from 'src/components/error-boundary/ErrorBoundary';\nimport { Header } from 'src/components/header/Header';\nimport { Card } from 'src/components/card/Card';\nimport { Sorting, SortingItem } from 'src/components/sorting/Sorting';\nimport { Filter } from 'src/components/filter/Filter';\nimport { CombineType } from 'src/store/store';\nimport { filter_product_by_company_slug, filter_product_by_tags, Product } from 'src/store/reducers/ProductReducer';\nimport { Company } from 'src/store/reducers/CompanyReducer';\nimport { ProductList } from 'src/pages/home/content-area/ProductList';\nimport { BasketList } from 'src/pages/home/basket-area/BasketList';\nimport { setTitle } from 'src/index';\n\nfunction App(): JSX.Element {\n  setTitle('Serkan Konakcı - Getir.com CodingCase / 505 865 7075');\n  const mutableRefObject = useRef<React.ElementRef<typeof Sorting>>(null);\n  const selector = useSelector((state: CombineType) => state);\n  const dispatch = useDispatch();\n  const [products, setProducts] = useState([...selector.products.filtered]);\n  const sortingCases: SortingItem[] = [\n    {label: 'Price low to high', type: 'price', direction: 'asc'},\n    {label: 'Price high to low', type: 'price', direction: 'desc'},\n    {label: 'New to old', type: 'added', direction: 'asc'},\n    {label: 'Old to new', type: 'added', direction: 'desc'},\n  ];\n\n  const filterByTags = (tags: string[]) => {\n    dispatch(filter_product_by_tags(tags))\n  }\n\n  const filterByCompanies = (companies: Company[] = []) => {\n    dispatch(filter_product_by_company_slug(companies))\n  }\n\n  const onSorting = (sorting: Product[]) => {\n    setProducts([...sorting]);\n  }\n\n  const uncheck = () => {\n    mutableRefObject.current?.uncheck();\n  }\n\n  useEffect(() => {\n    uncheck();\n    setProducts([...selector.products.filtered]);\n  }, [selector.products.filtered]);\n\n  return (\n    <ErrorBoundary>\n      <div className=\"app\">\n        <Header/>\n        <main className=\"container\">\n          <div className=\"row\">\n            <div className=\"filter-area col-xs-3\">\n              <Card label={'Sort'}>\n                <Sorting onClick={onSorting} data={products} cases={sortingCases} ref={mutableRefObject}/>\n              </Card>\n              <Card label={'Brands'}>\n                <Filter\n                  placeholder={'Search brand'}\n                  data={selector.companies}\n                  path={'name'}\n                  onClick={(company: Company[]) => filterByCompanies(company)}\n                />\n              </Card>\n              <Card label={'Tags'}>\n                <Filter\n                  placeholder={'Search tag'}\n                  data={selector.products.tags}\n                  onClick={(tags: string[]) => filterByTags(tags)}\n                />\n              </Card>\n            </div>\n            <div className=\"content-area col-xs-6\">\n              <ProductList list={products}/>\n            </div>\n            <div className=\"basket-area col-xs-3\">\n              <BasketList/>\n            </div>\n          </div>\n        </main>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import { Action, combineReducers, createStore } from 'redux';\n\nimport { ProductReducer } from 'src/store/reducers/ProductReducer';\nimport { CompanyReducer } from 'src/store/reducers/CompanyReducer';\nimport { BasketReducer } from 'src/store/reducers/BasketReducer';\n\nconst combine = combineReducers({\n  products: ProductReducer,\n  companies: CompanyReducer,\n  basket: BasketReducer,\n})\nexport type CombineType = ReturnType<typeof combine>;\nexport const store = createStore<CombineType, Action, never, never>(combine);\n","import { AnyAction, Reducer } from 'redux';\n\nimport data from '../companies.json';\n\nexport interface Company {\n  'slug': string;\n  'name': string;\n  'address': string;\n  'city': string;\n  'state': string;\n  'zip': string;\n  'account': number,\n  'contact': string;\n}\n\nexport const CompanyReducer: Reducer = (state: Company[] = data, action) => {\n  switch (action.type) {\n  case 'FILTER_COMPANY_BY_SLUG': {\n    return state.reduce((total: Company[], item: Company) => {\n      return [...total, ...action.payload.filter((pay: string) => item.slug === pay)];\n    }, []);\n  }\n  default :\n    return state\n  }\n}\n\nexport const filter_by_slug = (payload: string[]): AnyAction => {\n  return {\n    type: 'FILTER_COMPANY_BY_SLUG',\n    payload,\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.scss';\nimport App from './App';\nimport { store } from 'src/store/store';\nimport { Provider } from 'react-redux';\n\nexport const setTitle = (title: string): void => {\n  React.useEffect(() => {\n    const prevTitle = document.title;\n    document.title = title;\n\n    return () => {\n      document.title = prevTitle;\n    };\n  }, []);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>, document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}